from aiogram import types
from aiogram.dispatcher import FSMContext

from client.client import Client
from config.loader import dp
from states.create_category import CategoryState


@dp.message_handler(commands=["create_category"])
async def create_category(message: types.Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
    await CategoryState.name.set()


@dp.message_handler(state=CategoryState.name)
async def set_name_category(message: types.Message, state: FSMContext):
    category_name = message.text

    client = Client(url="/api/categories/")
    response = await client.post(data={
        "name": category_name,
        "user_tg_id": message.from_user.id
    })
    if response.status == 201:
        await message.answer(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è - {category_name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! üòä")
    elif response.status == 400:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!")
    else:
        await message.answer("–û—à–∏–±–∫–∞! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É! /admin")

    await state.finish()


@dp.message_handler(commands=["all_categories"])
async def get_all_categories(message: types.Message):
    headers = {
        "user_tg_id": str(message.from_user.id)
    }
    client = Client(url="/api/categories/", headers=headers)
    response = await client.get()
    data = await response.json()
    print(data)


